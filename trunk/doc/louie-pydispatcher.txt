============================================
 Differences between Louie and PyDispatcher
============================================


.. sectnum::

.. contents::


Abstract
========

Louie_, while based on PyDispatcher_, has several aspects that differ
from it.  This document provides a detailed list of those
differences, which may be helpful for users of PyDispatcher who would
like to use or evaluate Louie.

.. _Louie: http://louie.berlios.de/


Packaging and Distribution
==========================

* Louie uses setuptools_ for managing its placement in a Python
  installation's package hierarchy.

.. _setuptools: http://www.python.org/pypi/setuptools


Naming and Importing
====================

* The package name for Louie is `louie`.

* The preferred way of using Louie is to only import the `louie`
  package, e.g.::

    import louie
    louie.connect(...)
    louie.send(...)

* Function and method names are lowercase_with_underscores, to conform
  to PEP-0008.


Plug-ins
========

* Louie provides globally-registered plug-ins that augment various
  aspects of Louie's operation.

* Available plug-ins include the following:

  * The `QtWidget` plug-in knows how to handle Qt widgets that still
    exist as Python objects, but whose C++ objects have been
    destroyed.

  * The `TwistedDispatch` plug-in converts Louie's default synchronous
    signal dispatching behavior to an asynchronous behavior based on
    Twisted Deferred objects.


..
     Local Variables:
     mode: rst
     End: 

